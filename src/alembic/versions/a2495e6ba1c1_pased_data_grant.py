"""pased_data_grant

Revision ID: a2495e6ba1c1
Revises: bf5d2a8cd96b
Create Date: 2024-11-24 09:54:57.990611

"""
from typing import Sequence, Union
from datetime import datetime, UTC
import csv
from pathlib import Path

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a2495e6ba1c1'
down_revision: Union[str, None] = 'bf5d2a8cd96b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def import_grants_data(grants_table):
    # Путь к CSV файлу (предполагается, что он находится в папке data на уровень выше alembic)
    csv_path = Path(__file__).parent / "grants.csv"

    # Читаем данные из CSV и вставляем их в базу
    with open(csv_path, 'r', encoding='utf-8') as file:
        csv_reader = csv.DictReader(file)
        for row in csv_reader:
            op.bulk_insert(grants_table, [{
                'image_url': row['image_url'],
                'grant_min': int(row['grant_min']) if row['grant_min'] else None,
                'grant_max': int(row['grant_max']) if row['grant_max'] else None,
                'documents': row['documents'],
                'title': row['title'],
                'description': row['description'],
                'implementation_period': row['implementation_period'],
                'competition_name': row['competition_name'],
                'contacts': row['contacts'],
                'url': row['url'],
                'created_at': datetime.now(UTC)
            }])


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('grants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('grant_min', sa.Integer(), nullable=True),
    sa.Column('grant_max', sa.Integer(), nullable=True),
    sa.Column('documents', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('implementation_period', sa.String(), nullable=True),
    sa.Column('competition_name', sa.String(), nullable=True),
    sa.Column('contacts', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grants_id'), 'grants', ['id'], unique=False)
    op.create_unique_constraint(None, 'program', ['id'])
    op.create_unique_constraint(None, 'startup', ['id'])

    # Создаем объект таблицы для вставки данных
    grants_table = sa.table('grants',
        sa.column('image_url', sa.String),
        sa.column('grant_min', sa.Integer),
        sa.column('grant_max', sa.Integer),
        sa.column('documents', sa.String),
        sa.column('title', sa.String),
        sa.column('description', sa.String),
        sa.column('implementation_period', sa.String),
        sa.column('competition_name', sa.String),
        sa.column('contacts', sa.String),
        sa.column('url', sa.String),
        sa.column('created_at', sa.DateTime(timezone=True))
    )

    # Импортируем данные
    import_grants_data(grants_table)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'startup', type_='unique')
    op.drop_constraint(None, 'program', type_='unique')
    op.drop_index(op.f('ix_grants_id'), table_name='grants')
    op.drop_table('grants')
    # ### end Alembic commands ###
